
Spring JMS Producer :=> 

Sender part for sending Messages to a Queue of RabbitMQ using annotation configuration :


RabbitMQConfig.java =>

@Configuration
@EnableAutoConfiguration
public class RabbitMQConfig
{
    final static String queueName = "message_queue";

    @Autowired
    RabbitTemplate rabbitTemplate;

    @Bean
    public ConnectionFactory connectionFactory()
    {
	CachingConnectionFactory connectionFactory = new CachingConnectionFactory("localhost");
	connectionFactory.setPort(5672);
	connectionFactory.setUsername("guest");
	connectionFactory.setPassword("guest");
	return connectionFactory;
    }

    @Bean
    Queue queue()
    {
	return new Queue(queueName, false);
    }

    @Bean
    TopicExchange exchange()
    {
	return new TopicExchange("message_queue_exchange");
    }

    @Bean
    Binding binding(Queue queue, TopicExchange exchange)
    {
	return BindingBuilder.bind(queue).to(exchange).with(queueName);
    }
}


MessageProducer.java =>

public class MessageProducerApp
{
    final static String queueName = "message_queue";

    public static void main(String[] args) throws InterruptedException
    {
	AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(RabbitMQConfig.class);
	RabbitTemplate rabbitTemplate = (RabbitTemplate) ctx.getBean("rabbitTemplate");

	rabbitTemplate.convertAndSend(queueName, "Hello World!");
	System.out.println("Message has been sent successfully to Queue");
	ctx.close();
    }
}

#############################################################################################################################