
Spring JMS Consumer :=> 

Receiver part for Receive Messages from a Queue of RabbitMQ using annotation configuration :


RabbitMQConfig.java =>

@Configuration
@EnableAutoConfiguration
public class RabbitMQConfig
{
    final static String queueName = "message_queue";

    @Autowired
    RabbitTemplate rabbitTemplate;

    @Bean
    Queue queue()
    {
	return new Queue(queueName, false);
    }

    @Bean
    TopicExchange exchange()
    {
	return new TopicExchange("message_queue_exchange");
    }

    @Bean
    Binding binding(Queue queue, TopicExchange exchange)
    {
	return BindingBuilder.bind(queue).to(exchange).with(queueName);
    }

    @Bean
    public ConnectionFactory connectionFactory()
    {
	CachingConnectionFactory connectionFactory = new CachingConnectionFactory("localhost");
	connectionFactory.setPort(5672);
	connectionFactory.setUsername("guest");
	connectionFactory.setPassword("guest");
	return connectionFactory;
    }

    @Bean
    SimpleMessageListenerContainer container(ConnectionFactory connectionFactory, MessageListenerAdapter listenerAdapter)
    {
	System.out.println("host = " + connectionFactory.getHost());
	SimpleMessageListenerContainer container = new SimpleMessageListenerContainer();
	container.setConnectionFactory(connectionFactory);
	container.setQueueNames(queueName);
	container.setMessageListener(listenerAdapter);
	return container;
    }

    @Bean
    MessageReceiver receiver()
    {
	return new MessageReceiver(); 
    }

    @Bean
    MessageListenerAdapter listenerAdapter(MessageReceiver receiver)
    {
	return new MessageListenerAdapter(receiver, "receiveMsg");
    }
}


MessageReceiver.java =>

public class MessageReceiver
{
    private CountDownLatch countDownLatch = new CountDownLatch(1);

    public void receiveMsg(String message)
    {
	System.out.println("Message Received: " + message);
	countDownLatch.countDown();
    }

    public CountDownLatch getCountDownLatch()
    {
	return countDownLatch;
    }
}



MessageConsumerApp.java =>

public class MessageConsumerApp
{
    final static String queueName = "message_queue";
    
    public static void main(String[] args) throws InterruptedException
    {
	AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext(RabbitMQConfig.class);
	MessageReceiver receiver = (MessageReceiver) ctx.getBean("receiver");
	receiver.getCountDownLatch().await(200000, TimeUnit.SECONDS);
    }
}

#############################################################################################################################